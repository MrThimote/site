# Generated by Django 2.2.18 on 2021-05-06 18:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import forum.models
import prologin.models


class Migration(migrations.Migration):
    
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('slug', models.SlugField(max_length=300)),
                ('description', models.TextField(verbose_name='Description')),
                ('order', models.IntegerField(db_index=True, editable=False)),
                ('thread_count', models.PositiveIntegerField(blank=True, default=0, editable=False, verbose_name='Number of threads')),
                ('post_count', models.PositiveIntegerField(blank=True, default=0, editable=False, verbose_name='Number of posts')),
            ],
            options={
                'ordering': ('order',),
                'verbose_name_plural': 'Forums',
                'verbose_name': 'Forum',
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(max_length=300)),
                ('type', prologin.models.EnumField(forum.models.Type, choices=[(0, 'Normal'), (1, 'Sticky'), (2, 'Announce')], db_index=True, default=0, verbose_name='Thread type')),
                ('status', prologin.models.EnumField(forum.models.Status, choices=[(0, 'Normal'), (1, 'Closed'), (2, 'Moved')], db_index=True, default=0, verbose_name='Thread status')),
                ('is_visible', models.BooleanField(db_index=True, default=True, verbose_name='Visible')),
                ('date_last_edited', models.DateTimeField(auto_now=True)),
                ('post_count', models.PositiveIntegerField(blank=True, default=0, editable=False, verbose_name='Number of posts')),
                ('date_last_post', models.DateTimeField(blank=True, null=True, verbose_name='Last post added on')),
                ('forum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threads', to='forum.Forum')),
                ('last_edited_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forum_last_edited_threads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-type', '-date_last_post'),
                'verbose_name_plural': 'Threads',
                'verbose_name': 'Thread',
                'get_latest_by': 'date_last_post',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Content')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_last_edited', models.DateTimeField(auto_now=True)),
                ('last_edited_reason', models.TextField(blank=True, verbose_name='Edit reason')),
                ('is_visible', models.BooleanField(db_index=True, default=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_posts', to=settings.AUTH_USER_MODEL)),
                ('last_edited_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forum_last_edited_posts', to=settings.AUTH_USER_MODEL)),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='forum.Thread')),
            ],
            options={
                'ordering': ('date_created',),
                'verbose_name_plural': 'Posts',
                'verbose_name': 'Post',
                'get_latest_by': 'date_created',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_post_count', models.PositiveIntegerField(blank=True, default=0, editable=False, verbose_name='Number of posts')),
                ('last_author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification', to=settings.AUTH_USER_MODEL)),
                ('last_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification', to='forum.Post')),
                ('thread', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='notification', to='forum.Thread')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='notification_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReadState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_states', to='forum.Post')),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_states', to='forum.Thread')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_states', to=settings.AUTH_USER_MODEL)),
                ('subtype', prologin.models.EnumField(forum.models.SubscribeType, choices=[(0, 'Nothing'), (1, 'Notification'), (2, 'Mail')], db_index=True, default=0, verbose_name='Subscribe type')),
                ('notification', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='read_states', to='forum.Notification')),
            ],
            options={
                'unique_together': {('thread', 'user')},
            },
        ),
    ]
